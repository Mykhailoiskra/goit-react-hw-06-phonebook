{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Contact/Contact.jsx","redux/itemsSlice.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","redux/filterSlice.js","components/Filter/Filter.jsx","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css"],"names":["module","exports","Contact","name","number","onDelete","className","s","contactList__text","contactList__name","contactList__number","contactList__deleteBtn","onClick","itemsSlice","createSlice","initialState","reducers","addContact","reducer","state","payload","find","contact","alert","unshift","prepare","id","shortid","generate","deleteContact","filter","actions","getFilter","contacts","getFilteredContacts","items","getItems","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","contactList","map","contactList__item","ContactForm","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","form","form__label","form__input","type","onChange","form__btn","filterSlice","changeFilter","_","Filter","target","filter__input","App","rootPersistConfig","key","storage","blacklist","contactsPersistConfig","contactsReducer","combineReducers","itemsReducer","filterReducer","rootReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistedStore","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c1e4d33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1DyDR\",\"contactList__item\":\"ContactList_contactList__item__2PbVF\",\"contactList__text\":\"ContactList_contactList__text__2UykN\",\"contactList__name\":\"ContactList_contactList__name__3DLCv\",\"contactList__number\":\"ContactList_contactList__number__3_pun\",\"contactList__deleteBtn\":\"ContactList_contactList__deleteBtn__xsaO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Ypxs\",\"filter__input\":\"Filter_filter__input__2grRf\"};","import s from \"./Contact.module.css\";\r\nconst Contact = ({ name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div className={s.contactList__text}>\r\n        <p className={s.contactList__name}>{name}</p>\r\n        <p className={s.contactList__number}>Tel: {number}</p>\r\n      </div>\r\n      <button className={s.contactList__deleteBtn} onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst itemsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: [],\r\n  reducers: {\r\n    addContact: {\r\n      reducer(state, { payload }) {\r\n        if (!state.find((contact) => contact.name === payload.name)) {\r\n          state.unshift(payload);\r\n        } else {\r\n          alert(`${payload.name} is already in the list`);\r\n          return state;\r\n        }\r\n      },\r\n      prepare({ name, number }) {\r\n        return {\r\n          payload: {\r\n            name,\r\n            number,\r\n            id: shortid.generate(),\r\n          },\r\n        };\r\n      },\r\n    },\r\n    deleteContact(state, { payload }) {\r\n      return state.filter((contact) => contact.id !== payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact } = itemsSlice.actions;\r\n\r\nexport default itemsSlice.reducer;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = (state) => {\r\n  const contacts = getItems(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Contact from \"../Contact/Contact.jsx\";\r\nimport { deleteContact } from \"redux/itemsSlice\";\r\nimport { getFilteredContacts } from \"redux/selectors\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactList__item}>\r\n          <Contact\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => {\r\n              dispatch(deleteContact(id));\r\n            }}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","// Libraries\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Components\r\nimport { addContact } from \"redux/itemsSlice\";\r\n\r\n// Other staff\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          value={number}\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    changeFilter(_, { payload }) {\r\n      return payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = filterSlice.actions;\r\n\r\nexport default filterSlice.reducer;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"redux/filterSlice\";\r\nimport { getFilter } from \"redux/selectors\";\r\n\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n      Find a contact\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(event) => dispatch(changeFilter(event.target.value))}\r\n        className={s.filter__input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactList from \"components/ContactList/ContactList.jsx\";\nimport ContactForm from \"components/ContactForm/ContactForm.jsx\";\nimport Filter from \"components/Filter/Filter.jsx\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"main_container\">\n      <h1 className=\"main_heading\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contacts_heading\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport itemsReducer from \"./itemsSlice\";\r\nimport filterReducer from \"./filterSlice\";\r\n\r\nconst rootPersistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"contacts\"],\r\n};\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(rootPersistConfig, rootReducer),\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persistedStore = { store, persistor };\r\nexport default persistedStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport persistedStore from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={persistedStore.store}>\n    <PersistGate loading={null} persistor={persistedStore.persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__11l14\",\"form__label\":\"ContactForm_form__label__e1zRl\",\"form__input\":\"ContactForm_form__input__2nu0U\",\"form__btn\":\"ContactForm_form__btn__1c8mP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__text\":\"Contact_contactList__text__1Qssm\",\"contactList__name\":\"Contact_contactList__name__33JbY\",\"contactList__number\":\"Contact_contactList__number__1Qe4K\",\"contactList__deleteBtn\":\"Contact_contactList__deleteBtn__HvoZO\"};"],"sourceRoot":""}